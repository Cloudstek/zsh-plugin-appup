#!/usr/bin/env zunit

@setup {
    load _support/docker
    load ../appup.plugin.zsh
    
    _tmp_setup
}

@teardown {
    _tmp_teardown
}

@test 'Docker down' {
    _setup_simple_env

    run down
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose down'
}

@test 'Docker down (with arguments)' {
    _setup_simple_env

    run down mysql -v
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose down mysql -v'
}

@test 'Docker down (without docker-compose file)' {
    run down
    
    assert $state equals 0
    assert "$output" is_empty
}

@test 'Docker down (with arguments, without docker-compose file)' {
    run down mysql
    
    assert $state equals 0
    assert "$output" is_empty
}

@test 'Docker down (with project)' {
    _setup_project_env foobar

    run down foobar
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose -f docker-compose.yml -f docker-compose.foobar.yml down'
}

@test 'Docker down (with project and arguments)' {
    _setup_project_env foobar

    run down foobar mysql -v
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose -f docker-compose.yml -f docker-compose.foobar.yml down mysql -v'
}

@test 'Docker down (with project, yaml extension)' {
    _setup_project_env foobar yaml

    run down foobar
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose -f docker-compose.yaml -f docker-compose.foobar.yaml down'
}

@test 'Docker down (with project and arguments, yaml extension)' {
    _setup_project_env foobar yaml

    run down foobar mysql -v
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose -f docker-compose.yaml -f docker-compose.foobar.yaml down mysql -v'
}

@test 'Docker down (with project, yml/yaml extensions)' {
    _setup_project_env foobar yaml
    mv $APPUP_TMP/docker-compose.yaml $APPUP_TMP/docker-compose.yml

    run down foobar
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose -f docker-compose.yml -f docker-compose.foobar.yaml down'
}

@test 'Docker down (with project and arguments, yml/yaml extensions)' {
    _setup_project_env foobar yaml
    mv $APPUP_TMP/docker-compose.yaml $APPUP_TMP/docker-compose.yml

    run down foobar mysql -v
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose -f docker-compose.yml -f docker-compose.foobar.yaml down mysql -v'
}

@test 'Docker down (with custom project name)' {
    _setup_project_env foobar
    echo "COMPOSE_PROJECT_NAME=test-project" > $APPUP_TMP/.env.foobar

    run down foobar
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose -p test-project -f docker-compose.yml -f docker-compose.foobar.yml down'
}

@test 'Docker down (with custom project name and arguments)' {
    _setup_project_env foobar
    echo "COMPOSE_PROJECT_NAME=test-project" > $APPUP_TMP/.env.foobar

    run down foobar mysql -v
    
    assert $state equals 0
    assert "$output" same_as 'docker-compose -p test-project -f docker-compose.yml -f docker-compose.foobar.yml down mysql -v'
}